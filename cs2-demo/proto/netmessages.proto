import "networkbasetypes.proto";

enum SVC_Messages {
	svc_ServerInfo = 40;
	svc_FlattenedSerializer = 41;
	svc_ClassInfo = 42;
	svc_SetPause = 43;
	svc_CreateStringTable = 44;
	svc_UpdateStringTable = 45;
	svc_VoiceInit = 46;
	svc_VoiceData = 47;
	svc_Print = 48;
	svc_Sounds = 49;
	svc_SetView = 50;
	svc_ClearAllStringTables = 51;
	svc_CmdKeyValues = 52;
	svc_BSPDecal = 53;
	svc_SplitScreen = 54;
	svc_PacketEntities = 55;
	svc_Prefetch = 56;
	svc_Menu = 57;
	svc_GetCvarValue = 58;
	svc_StopSound = 59;
	svc_PeerList = 60;
	svc_PacketReliable = 61;
	svc_HLTVStatus = 62;
	svc_ServerSteamID = 63;
	svc_FullFrameSplit = 70;
	svc_RconServerDetails = 71;
	svc_UserMessage = 72;
	svc_HltvReplay = 73;
	svc_Broadcast_Command = 74;
	svc_HltvFixupOperatorStatus = 75;
}

message CSVCMsg_ServerInfo {
	optional int32 protocol = 1;
	optional int32 server_count = 2;
	optional bool is_dedicated = 3;
	optional bool is_hltv = 4;
	optional int32 c_os = 6;
	optional int32 max_clients = 10;
	optional int32 max_classes = 11;
	optional int32 player_slot = 12 [default = -1];
	optional float tick_interval = 13;
	optional string game_dir = 14;
	optional string map_name = 15;
	optional string sky_name = 16;
	optional string host_name = 17;
	optional string addon_name = 18;
	optional .CSVCMsg_GameSessionConfiguration game_session_config = 19;
	optional bytes game_session_manifest = 20;
}

message ProtoFlattenedSerializerField_t {
	message polymorphic_field_t {
		optional int32 polymorphic_field_serializer_name_sym = 1;
		optional int32 polymorphic_field_serializer_version = 2;
	}

	optional int32 var_type_sym = 1;
	optional int32 var_name_sym = 2;
	optional int32 bit_count = 3;
	optional float low_value = 4;
	optional float high_value = 5;
	optional int32 encode_flags = 6;
	optional int32 field_serializer_name_sym = 7;
	optional int32 field_serializer_version = 8;
	optional int32 send_node_sym = 9;
	optional int32 var_encoder_sym = 10;
	repeated .ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
}

message ProtoFlattenedSerializer_t {
	optional int32 serializer_name_sym = 1;
	optional int32 serializer_version = 2;
	repeated int32 fields_index = 3;
}

message CSVCMsg_FlattenedSerializer {
	repeated .ProtoFlattenedSerializer_t serializers = 1;
	repeated string symbols = 2;
	repeated .ProtoFlattenedSerializerField_t fields = 3;
}

message CSVCMsg_PacketEntities {
	message command_queue_info_t {
		optional uint32 commands_queued = 1;
		optional uint32 command_queue_desired_size = 2;
		optional uint32 starved_command_ticks = 3;
		optional float time_dilation_percent = 4;
		optional uint32 discarded_command_ticks = 5;
	}

	message alternate_baseline_t {
		optional int32 entity_index = 1;
		optional int32 baseline_index = 2;
	}

	optional int32 max_entries = 1;
	optional int32 updated_entries = 2;
	optional bool is_delta = 3;
	optional bool update_baseline = 4;
	optional int32 baseline = 5;
	optional int32 delta_from = 6;
	optional bytes entity_data = 7;
	optional bool pending_full_frame = 8;
	optional uint32 active_spawngroup_handle = 9;
	optional uint32 max_spawngroup_creationsequence = 10;
	optional uint32 last_cmd_number = 11;
	optional uint32 server_tick = 12;
	optional bytes serialized_entities = 13;
	optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
	repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
}
